{
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion":  "1.0.0.0",
    "metadata":  {
        "title":  "Aggregate Twitter Posts",
        "description":  "Aggregate Tweets in to a single daily email. Once you application has deployed to will need to auithenticate against your Twitter account and an Office 365 Mailbox.",
        "prerequisites":  "Twitter, Offcie 365 Mailbox",
        "postDeployment":  [
        ],
        "prerequisitesDeployTemplateFile":  "",
        "lastUpdateTime":  "",
        "entities":  [
        ],
        "tags":  [
        ],
        "support":  {
            "tier":  "community",
            "armtemplate":  "Generated from https://github.com/Azure/Azure-Sentinel/tree/master/Tools/Playbook-ARM-Template-Generator"
        },
        "author":  {
            "name":  ""
        }
    },
    "parameters":  {
        "PlaybookName":  {
            "defaultValue":  "Schedule-TwitterAggregation",
            "type":  "string"
        },
        "EmailRecipients":  {
            "type":  "string",
            "metadata":  {
                "description":  "Enter the Email Recipients"
            }
        },
        "MaxResults":  {
            "type":  "string",
            "metadata":  {
                "description":  "Enter a value for Maximum returned Twitter results (Integer)"
            }
        },
        "TwitterUser":  {
            "type":  "string",
            "metadata":  {
                "description":  "Enter the Twitter account"
            }
        }
    },
    "variables":  {
        "Office365ConnectionName":  "[concat('Office365-', parameters('PlaybookName'))]",
        "TwitterConnectionName":  "[concat('Twitter-', parameters('PlaybookName'))]"
    },
    "resources":  [
        {
            "properties":  {
                "provisioningState":  "Succeeded",
                "state":  "Enabled",
                "definition":  {
                    "$schema":  "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion":  "1.0.0.0",
                    "parameters":  {
                        "$connections":  {
                            "defaultValue":  {
                            },
                            "type":  "Object"
                        },
                        "EmailRecipients":  {
                            "defaultValue":  "[parameters('EmailRecipients')]",
                            "type":  "string"
                        },
                        "MaxResults":  {
                            "defaultValue":  "[parameters('MaxResults')]",
                            "type":  "string"
                        },
                        "TwitterUser":  {
                            "defaultValue":  "[parameters('TwitterUser')]",
                            "type":  "string"
                        }
                    },
                    "triggers":  {
                        "Recurrence":  {
                            "recurrence":  {
                                "frequency":  "Day",
                                "interval":  1,
                                "schedule":  {
                                    "hours":  [
                                        "1"
                                    ]
                                }
                            },
                            "evaluatedRecurrence":  {
                                "frequency":  "Day",
                                "interval":  1,
                                "schedule":  {
                                    "hours":  [
                                        "1"
                                    ]
                                }
                            },
                            "type":  "Recurrence"
                        }
                    },
                    "actions":  {
                        "Condition":  {
                            "actions":  {
                                "Create_HTML_table":  {
                                    "runAfter":  {
                                    },
                                    "type":  "Table",
                                    "inputs":  {
                                        "format":  "HTML",
                                        "from":  "@variables('FilteredTweets')"
                                    }
                                },
                                "Format_Table_CSS":  {
                                    "runAfter":  {
                                        "Create_HTML_table":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "Compose",
                                    "inputs":  "\u003cstyle\u003e\n#formatTable, \ntable {\n    border: 5px solid #3f7fc7;\n    background-color: #EEEEEE;\n    width: 100%;\n    text-align: left;\n    border-collapse: collapse;\n    }\n  table td, table th {\n    border: 1px solid #AAAAAA;\n    padding: 10px 10px;\n    }\n  table tbody td {\n    font-size: 13px;\n    }\n  table thead {\n    background: #3f7fc7;\n    border-bottom: 1px solid #444444;\n    }\n  table thead th {\n    font-size: 15px;\n    font-weight: bold;\n    color: #FFFFFF;\n    border-left: 1px solid #D0E4F5;\n    }\n  table thead th:first-child {\n    border-left: none;\n    }\n\u003c/style\u003e\n\u003cdiv id=\"formatTable\"\u003e\n@{body('Create_HTML_table')}\n\u003c/div\u003e"
                                },
                                "Send_an_email_(V2)":  {
                                    "runAfter":  {
                                        "Format_Table_CSS":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "ApiConnection",
                                    "inputs":  {
                                        "body":  {
                                            "Body":  "\u003cp\u003e@{outputs('Format_Table_CSS')}\u003c/p\u003e",
                                            "Importance":  "Normal",
                                            "Subject":  "Tweets today from @{parameters('TwitterUser')}",
                                            "To":  "@parameters('EmailRecipients')"
                                        },
                                        "host":  {
                                            "connection":  {
                                                "name":  "@parameters('$connections')['office365']['connectionId']"
                                            }
                                        },
                                        "method":  "post",
                                        "path":  "/v2/Mail"
                                    }
                                }
                            },
                            "runAfter":  {
                                "Parse_JSON":  [
                                    "Succeeded"
                                ]
                            },
                            "expression":  {
                                "and":  [
                                    {
                                        "not":  {
                                            "equals":  [
                                                "@length(variables('FilteredTweets'))",
                                                0
                                            ]
                                        }
                                    }
                                ]
                            },
                            "type":  "If"
                        },
                        "Filter_Posted_Today":  {
                            "runAfter":  {
                                "Parse_Tweet_Array":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Query",
                            "inputs":  {
                                "from":  "@body('Parse_Tweet_Array')",
                                "where":  "@startsWith(item()?['Posted'], formatDateTime(utcNow(getPastTime(1, 'Day')), 'yyyy-MM-dd'))"
                            }
                        },
                        "Filter_Replies":  {
                            "runAfter":  {
                                "Filter_Posted_Today":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Query",
                            "inputs":  {
                                "from":  "@body('Filter_Posted_Today')",
                                "where":  "@not(startsWith(item()?['Tweet'], '@'))"
                            }
                        },
                        "For_each":  {
                            "foreach":  "@body('Search_tweets')",
                            "actions":  {
                                "Append_to_array_variable":  {
                                    "runAfter":  {
                                    },
                                    "type":  "AppendToArrayVariable",
                                    "inputs":  {
                                        "name":  "Tweets",
                                        "value":  {
                                            "Posted":  "@{items('For_each')?['CreatedAtIso']}",
                                            "Tweet":  "@{items('For_each')['TweetText']}",
                                            "URL":  "https://twitter.com/@{split(parameters('TwitterUser'), '@')[1]}/status/@{items('For_each')?['TweetId']}"
                                        }
                                    }
                                }
                            },
                            "runAfter":  {
                                "Search_tweets":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Foreach"
                        },
                        "For_each_2":  {
                            "foreach":  "@body('Filter_Replies')",
                            "actions":  {
                                "Append_to_array_variable_2":  {
                                    "runAfter":  {
                                    },
                                    "type":  "AppendToArrayVariable",
                                    "inputs":  {
                                        "name":  "FilteredTweets",
                                        "value":  {
                                            "Comment":  "@{items('For_each_2')?['Tweet']}",
                                            "Posted":  "@{formatDateTime(items('For_each_2')?['Posted'], 'dd-MM-yyyy HH:mm:ss')}",
                                            "URL":  "@{items('For_each_2')?['URL']}"
                                        }
                                    }
                                }
                            },
                            "runAfter":  {
                                "Filter_Replies":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Foreach"
                        },
                        "Initialize_Filtered_Tweets":  {
                            "runAfter":  {
                                "Initialize_Tweet_Array":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "FilteredTweets",
                                        "type":  "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_Tweet_Array":  {
                            "runAfter":  {
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "Tweets",
                                        "type":  "array"
                                    }
                                ]
                            }
                        },
                        "Parse_JSON":  {
                            "runAfter":  {
                                "For_each_2":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ParseJson",
                            "inputs":  {
                                "content":  "@variables('FilteredTweets')",
                                "schema":  {
                                    "items":  {
                                        "properties":  {
                                            "Comment":  {
                                                "type":  "string"
                                            },
                                            "Posted":  {
                                                "type":  "string"
                                            },
                                            "URL":  {
                                                "type":  "string"
                                            }
                                        },
                                        "required":  [
                                            "Comment",
                                            "Posted",
                                            "URL"
                                        ],
                                        "type":  "object"
                                    },
                                    "type":  "array"
                                }
                            }
                        },
                        "Parse_Tweet_Array":  {
                            "runAfter":  {
                                "For_each":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ParseJson",
                            "inputs":  {
                                "content":  "@variables('Tweets')",
                                "schema":  {
                                    "items":  {
                                        "properties":  {
                                            "Posted":  {
                                                "type":  "string"
                                            },
                                            "Tweet":  {
                                                "type":  "string"
                                            },
                                            "URL":  {
                                                "type":  "string"
                                            }
                                        },
                                        "required":  [
                                            "Posted",
                                            "Tweet",
                                            "URL"
                                        ],
                                        "type":  "object"
                                    },
                                    "type":  "array"
                                }
                            }
                        },
                        "Search_tweets":  {
                            "runAfter":  {
                                "Initialize_Filtered_Tweets":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['twitter']['connectionId']"
                                    }
                                },
                                "method":  "get",
                                "path":  "/searchtweets",
                                "queries":  {
                                    "maxResults":  "@parameters('MaxResults')",
                                    "searchQuery":  "from:@{parameters('TwitterUser')}"
                                }
                            }
                        },
                        "Terminate":  {
                            "runAfter":  {
                                "Condition":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Terminate",
                            "inputs":  {
                                "runStatus":  "Succeeded"
                            }
                        }
                    },
                    "outputs":  {
                    }
                },
                "parameters":  {
                    "$connections":  {
                        "value":  {
                            "office365":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]",
                                "connectionName":  "[variables('Office365ConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Office365')]"
                            },
                            "twitter":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('TwitterConnectionName'))]",
                                "connectionName":  "[variables('TwitterConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Twitter')]"
                            }
                        }
                    }
                }
            },
            "name":  "[parameters('PlaybookName')]",
            "type":  "Microsoft.Logic/workflows",
            "location":  "[resourceGroup().location]",
            "tags":  {
                "hidden-SentinelTemplateName":  "Schedule-TwitterAggregation",
                "hidden-SentinelTemplateVersion":  "1.0"
            },
            "identity":  {
                "type":  "SystemAssigned"
            },
            "apiVersion":  "2017-07-01",
            "dependsOn":  [
                "[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('TwitterConnectionName'))]"
            ]
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('Office365ConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('Office365ConnectionName')]",
                "customParameterValues":  {
                },
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Office365')]"
                }
            }
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('TwitterConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('TwitterConnectionName')]",
                "customParameterValues":  {
                },
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Twitter')]"
                }
            }
        }
    ]
}
