// Main detection query with entity enrichment
let UserRiskData = IdentityInfo
    | where TimeGenerated > ago(7d)
    | summarize arg_max(TimeGenerated, *) by AccountUPN
    | project AccountUPN, Department, JobTitle, Manager, RiskLevel;
//
let AssetData = DeviceInfo  
    | where TimeGenerated > ago(1d)
    | summarize arg_max(TimeGenerated, *) by DeviceName
    | project DeviceName, DeviceType, OSPlatform, JoinType, 
             IsAzureADJoined, PublicIP;
//
SecurityAlert
| where TimeGenerated > ago(24h)
| where AlertName has "Suspicious"
| where Entities has_any ("account", "host", "ip", "file")  // Filter before parsing
| extend ParsedEntities = parse_json(Entities)  // Parse once and store
| mv-expand Entity = ParsedEntities  // Use different variable name
| extend EntityType = tostring(Entity.Type)
| extend EntityValue = case(
    EntityType == "account", tostring(Entity.AadUserId),
    EntityType == "host", tostring(Entity.HostName), 
    EntityType == "ip", tostring(Entity.Address),
    EntityType == "file", tostring(Entity.Name),
    "Unknown"
)
// Enrich with user context
| join kind=leftouter (UserRiskData) on $left.EntityValue == $right.AccountUPN
| join kind=leftouter (AssetData) on $left.EntityValue == $right.DeviceName
// Create investigation context
| extend InvestigationPriority = case(
    RiskLevel == "High" or DeviceType == "Server", "Critical",
    Department in ("Finance", "Executive", "IT"), "High",
    JobTitle has_any ("admin", "manager"), "Medium", 
    "Standard"
)
| extend RecommendedActions = case(
    EntityType == "account" and RiskLevel == "High", "Disable account and reset credentials",
    EntityType == "host" and DeviceType == "Server", "Isolate system and check for persistence",
    EntityType == "ip" and not(PublicIP startswith "10."), "Block external IP and check firewall logs",
    "Standard investigation workflow"
)
| project TimeGenerated, AlertName, AlertSeverity, EntityType, EntityValue,
         Department, JobTitle, DeviceType, InvestigationPriority, RecommendedActions