name: Pull Proton VPN Server Data

on:
  workflow_dispatch:
  schedule:
    # Run daily at midnight UTC
    - cron: "0 0 * * *"

jobs:
  pull-protonvpn-data:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Create directory if not exists
        run: mkdir -p ExternalData
      
      - name: Fetch and process Proton VPN server data
        run: |
          echo "Fetching Proton VPN server data from public website..."
          
          # Download the server list page and extract server data
          curl -s "https://protonvpn.com/vpn-servers" | \
          python3 -c "
          import sys, re
          html = sys.stdin.read()
          
          print('Country,ServerCount,Cities,Features')
          
          # Find all country sections
          countries = re.findall(r'([A-Za-z\s&]+)\n- Adblocker.*?\n.*?(\d+) servers? \| (\d+) cit', html, re.MULTILINE)
          
          for match in countries:
              country = match[0].strip()
              servers = match[1]
              cities = match[2]
              
              # Extract features for this country
              country_section = re.search(rf'{re.escape(country)}.*?(\d+ servers? \| \d+ cit)', html, re.DOTALL)
              features = []
              
              if country_section:
                  section_text = country_section.group(0)
                  if '- P2P' in section_text: features.append('P2P')
                  if '- Streaming support' in section_text: features.append('Streaming')
                  if '- TOR' in section_text: features.append('TOR')
              
              features_str = ','.join(features)
              print(f'\"{country}\",{servers},{cities},\"{features_str}\"')
          " > ExternalData/ProtonVPNServers.csv
          
          # Verify file was created and has content
          if [ ! -s ExternalData/ProtonVPNServers.csv ]; then
            echo "Error: Output file is empty or doesn't exist"
            exit 1
          fi
          
          # Count entries for logging (subtract 1 for header)
          entries=$(($(wc -l < ExternalData/ProtonVPNServers.csv) - 1))
          echo "Processed $entries ProtonVPN server countries"
      
      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Update Proton VPN servers - $(date -u +%Y-%m-%d)"
          file_pattern: 'ExternalData/ProtonVPNServers.csv'
          commit_user_name: 'Proton VPN Data Updater'
          commit_user_email: 'actions@github.com'
          push_options: '--force-with-lease'
