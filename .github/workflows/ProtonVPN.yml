name: Pull Proton VPN Server Data

on:
  workflow_dispatch:
  schedule:
    # Run daily at midnight UTC
    - cron: "0 0 * * *"

jobs:
  pull-protonvpn-data:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Create directory if not exists
        run: mkdir -p ExternalData
      
      - name: Fetch and process Proton VPN server data
        run: |
          echo "Fetching Proton VPN server data..."
          
          # Download the JSON data
          response=$(curl -s "https://api.protonmail.ch/vpn/logicals")
          
          # Check if we got valid JSON
          if ! echo "$response" | jq . > /dev/null 2>&1; then
            echo "Error: Invalid JSON response from API"
            exit 1
          fi
          
          # Convert JSON to CSV using jq
          echo "$response" | jq -r '
            ["ExitIP","ServicesDown","City","ExitCountry","EntryCountry","Status","ServerID","Name","Features"],
            (.LogicalServers[] as $logical |
              $logical.Servers[] |
              [
                .ExitIP,
                (.ServicesDown == 1),
                $logical.City,
                $logical.ExitCountry,
                .EntryCountry,
                (if .ServicesDown == 1 then "Down" else "Active" end),
                .ID,
                $logical.Name,
                ($logical.Features | join(","))
              ]
            ) | @csv
          ' > ExternalData/ProtonVPNExitNodes.csv
          
          # Verify file was created and has content
          if [ ! -s ExternalData/ProtonVPNExitNodes.csv ]; then
            echo "Error: Output file is empty or doesn't exist"
            exit 1
          fi
          
          # Count entries for logging (subtract 1 for header)
          entries=$(($(wc -l < ExternalData/ProtonVPNExitNodes.csv) - 1))
          echo "Processed $entries Proton VPN server entries"
      
      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Update Proton VPN servers - $(date -u +%Y-%m-%d)"
          file_pattern: 'ExternalData/ProtonVPNExitNodes.csv'
          commit_user_name: 'Proton VPN Data Updater'
          commit_user_email: 'actions@github.com'
          push_options: '--force-with-lease'
